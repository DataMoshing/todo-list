(()=>{"use strict";var e={"./node_modules/css-loader/dist/cjs.js!./src/style.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var r=t("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=t.n(r),s=t("./node_modules/css-loader/dist/runtime/api.js"),a=t.n(s)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter+Tight&display=swap);"]),a.push([e.id,'* {\n    margin: 0;\n    /* padding: 0; */\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter Tight\', sans-serif;\n    font-size: 20px;\n}\n\nmain {\n    display: flex;\n    min-width: 500px;\n}\n\nh1 {\n    display: flex;\n    font-weight: 100;\n    background-color: rgba(207, 207, 207, 0.582);\n    width: 200px;\n}\n\nheader {\n    width: 150px;\n    display: flex;\n}\n\n.add-project-task,\n.delete-project {\n    width: 150px;\n    height: 20px;\n}\n\n.project-input,\n.project-div,\ninput[type="submit"] {\n    display: flex;\n    align-items: center;\n    width: 300px;\n    font-weight: 100;\n}\n\n.project-input {\n    margin-bottom: .5rem;\n    gap: 10px;\n}\n\n.task-input>label {\n    min-width: 500px\n}\n\n.main-container {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n    min-width: 500px\n}\n\n.project-container {\n    display: flex;\n    align-items: center;\n    width: 450px;\n}\n\n.project-container>.add-project-task {\n    margin-right: .5rem;\n}\n\n.project-list {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n}\n\n.project-form {\n    display: flex;\n    margin-bottom: 2rem;\n    flex-direction: column;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n}\n\ninput[name="project"],\ninput[name="title"],\ninput[type="text"] {\n    border: none;\n    background-color: #d6d6d6d7;\n    width: 150px;\n    margin-left: .5rem;\n    border-radius: 0.5rem;\n    height: 1.3rem;\n    padding-bottom: 0.1rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n}\n\ninput[type="date"],\nselect {\n    background-color: #d6d6d6d7;\n    padding: 5px;\n    color: rgba(0, 0, 0, 0.747);\n    border: none;\n    border-radius: 1.5rem;\n}\n\n.task-list,\n.task-div {\n    display: flex;\n    flex-direction: column;\n}\n\n.task-title:hover,\n.task-due-date:hover,\n.task-priority:hover {\n    background-color: #c4c4c48e;\n    cursor: pointer;\n}\n\n.task-div {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 2px 2px;\n    border-radius: 10px;\n    display: flex;\n    margin-top: .5rem;\n    padding: 0 0 .5rem .5rem;\n}\n\n.task-div>.delete-task-btn {\n    width: 30px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 60px;\n    border: solid 1.5px rgb(0 0 0 / 0.7);\n    border: none;\n    margin-left: auto;\n}\n\n.task-div>.delete-task-btn:hover {\n    background-color: #f14410cb;\n}\n\ninput[type="submit"],\n.add-project-task,\n.delete-project {\n    display: flex;\n    justify-content: center;\n    background-color: transparent;\n    border: 2px solid #1A1A1A;\n    border-radius: 10px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    min-height: 25px;\n    min-width: 115px;\n    outline: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    will-change: transform;\n}\n\n.add-project-task:hover,\ninput[type="submit"]:hover {\n    color: #000000;\n    background-color: #80e011;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\n.delete-project:hover {\n    color: #000000;\n    background-color: #f14410cb;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\ninput[type="submit"]:active,\n.add-project-task:active {\n    box-shadow: none;\n    transform: translateY(0);\n}\n\n.edit-task-btn,\n.edit-priority-btn,\n.edit-due-date-btn {\n    width: 100px;\n}\n\n.new-due-date,\n.new-priority {\n    width: 125px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,sBAAsB;IACtB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sCAAsC;IACtC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,4CAA4C;IAC5C,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;;IAEI,YAAY;IACZ,YAAY;AAChB;;AAEA;;;IAGI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,SAAS;AACb;;AAEA;IACI;AACJ;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;;IAGI,YAAY;IACZ,2BAA2B;IAC3B,YAAY;IACZ,kBAAkB;IAClB,qBAAqB;IACrB,cAAc;IACd,sBAAsB;IACtB,oBAAoB;IACpB,qBAAqB;AACzB;;AAEA;;IAEI,2BAA2B;IAC3B,YAAY;IACZ,2BAA2B;IAC3B,YAAY;IACZ,qBAAqB;AACzB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;;IAGI,2BAA2B;IAC3B,eAAe;AACnB;;AAEA;IACI,8EAA8E;IAC9E,mBAAmB;IACnB,aAAa;IACb,iBAAiB;IACjB,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,oCAAoC;IACpC,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;;;IAGI,aAAa;IACb,uBAAuB;IACvB,6BAA6B;IAC7B,yBAAyB;IACzB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,mDAAmD;IACnD,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;;IAEI,cAAc;IACd,yBAAyB;IACzB,0CAA0C;AAC9C;;AAEA;IACI,cAAc;IACd,2BAA2B;IAC3B,0CAA0C;AAC9C;;AAEA;;IAEI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;;;IAGI,YAAY;AAChB;;AAEA;;IAEI,YAAY;AAChB",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Inter+Tight&display=swap\');\n\n* {\n    margin: 0;\n    /* padding: 0; */\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter Tight\', sans-serif;\n    font-size: 20px;\n}\n\nmain {\n    display: flex;\n    min-width: 500px;\n}\n\nh1 {\n    display: flex;\n    font-weight: 100;\n    background-color: rgba(207, 207, 207, 0.582);\n    width: 200px;\n}\n\nheader {\n    width: 150px;\n    display: flex;\n}\n\n.add-project-task,\n.delete-project {\n    width: 150px;\n    height: 20px;\n}\n\n.project-input,\n.project-div,\ninput[type="submit"] {\n    display: flex;\n    align-items: center;\n    width: 300px;\n    font-weight: 100;\n}\n\n.project-input {\n    margin-bottom: .5rem;\n    gap: 10px;\n}\n\n.task-input>label {\n    min-width: 500px\n}\n\n.main-container {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n    min-width: 500px\n}\n\n.project-container {\n    display: flex;\n    align-items: center;\n    width: 450px;\n}\n\n.project-container>.add-project-task {\n    margin-right: .5rem;\n}\n\n.project-list {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n}\n\n.project-form {\n    display: flex;\n    margin-bottom: 2rem;\n    flex-direction: column;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n}\n\ninput[name="project"],\ninput[name="title"],\ninput[type="text"] {\n    border: none;\n    background-color: #d6d6d6d7;\n    width: 150px;\n    margin-left: .5rem;\n    border-radius: 0.5rem;\n    height: 1.3rem;\n    padding-bottom: 0.1rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n}\n\ninput[type="date"],\nselect {\n    background-color: #d6d6d6d7;\n    padding: 5px;\n    color: rgba(0, 0, 0, 0.747);\n    border: none;\n    border-radius: 1.5rem;\n}\n\n.task-list,\n.task-div {\n    display: flex;\n    flex-direction: column;\n}\n\n.task-title:hover,\n.task-due-date:hover,\n.task-priority:hover {\n    background-color: #c4c4c48e;\n    cursor: pointer;\n}\n\n.task-div {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 2px 2px;\n    border-radius: 10px;\n    display: flex;\n    margin-top: .5rem;\n    padding: 0 0 .5rem .5rem;\n}\n\n.task-div>.delete-task-btn {\n    width: 30px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 60px;\n    border: solid 1.5px rgb(0 0 0 / 0.7);\n    border: none;\n    margin-left: auto;\n}\n\n.task-div>.delete-task-btn:hover {\n    background-color: #f14410cb;\n}\n\ninput[type="submit"],\n.add-project-task,\n.delete-project {\n    display: flex;\n    justify-content: center;\n    background-color: transparent;\n    border: 2px solid #1A1A1A;\n    border-radius: 10px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    min-height: 25px;\n    min-width: 115px;\n    outline: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    will-change: transform;\n}\n\n.add-project-task:hover,\ninput[type="submit"]:hover {\n    color: #000000;\n    background-color: #80e011;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\n.delete-project:hover {\n    color: #000000;\n    background-color: #f14410cb;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\ninput[type="submit"]:active,\n.add-project-task:active {\n    box-shadow: none;\n    transform: translateY(0);\n}\n\n.edit-task-btn,\n.edit-priority-btn,\n.edit-due-date-btn {\n    width: 100px;\n}\n\n.new-due-date,\n.new-priority {\n    width: 125px;\n}'],sourceRoot:""}]);const i=a},"./node_modules/css-loader/dist/runtime/api.js":e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);r&&a[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[n].concat([s]).join("\n")}return[n].join("\n")}},"./src/style.css":(e,n,t)=>{t.r(n),t.d(n,{default:()=>b});var r=t("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=t.n(r),s=t("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),a=t.n(s),i=t("./node_modules/style-loader/dist/runtime/insertBySelector.js"),d=t.n(i),c=t("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),A=t.n(c),l=t("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),p=t.n(l),u=t("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),m=t.n(u),f=t("./node_modules/css-loader/dist/cjs.js!./src/style.css"),g={};g.styleTagTransform=m(),g.setAttributes=A(),g.insert=d().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=p();o()(f.default,g);const b=f.default&&f.default.locals?f.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var s={},a=[],i=0;i<e.length;i++){var d=e[i],c=r.base?d[0]+r.base:d[0],A=s[c]||0,l="".concat(c," ").concat(A);s[c]=A+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=o(u,r);r.byIndex=i,n.splice(i,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(e,n){var t=n.domAPI(n);t.update(e);return function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var i=t(s[a]);n[i].references--}for(var d=r(e,o),c=0;c<s.length;c++){var A=t(s[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}s=d}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var s=t.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},"./node_modules/uuid/dist/esm-browser/native.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},"./node_modules/uuid/dist/esm-browser/regex.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},"./node_modules/uuid/dist/esm-browser/rng.js":(e,n,t)=>{let r;t.r(n),t.d(n,{default:()=>s});const o=new Uint8Array(16);function s(){if(!r&&(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}},"./node_modules/uuid/dist/esm-browser/stringify.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>a,unsafeStringify:()=>s});var r=t("./node_modules/uuid/dist/esm-browser/validate.js");const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function s(e,n=0){return(o[e[n+0]]+o[e[n+1]]+o[e[n+2]]+o[e[n+3]]+"-"+o[e[n+4]]+o[e[n+5]]+"-"+o[e[n+6]]+o[e[n+7]]+"-"+o[e[n+8]]+o[e[n+9]]+"-"+o[e[n+10]]+o[e[n+11]]+o[e[n+12]]+o[e[n+13]]+o[e[n+14]]+o[e[n+15]]).toLowerCase()}const a=function(e,n=0){const t=s(e,n);if(!(0,r.default)(t))throw TypeError("Stringified UUID is invalid");return t}},"./node_modules/uuid/dist/esm-browser/v4.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var r=t("./node_modules/uuid/dist/esm-browser/native.js"),o=t("./node_modules/uuid/dist/esm-browser/rng.js"),s=t("./node_modules/uuid/dist/esm-browser/stringify.js");const a=function(e,n,t){if(r.default.randomUUID&&!n&&!e)return r.default.randomUUID();const a=(e=e||{}).random||(e.rng||o.default)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=a[e];return n}return(0,s.unsafeStringify)(a)}},"./node_modules/uuid/dist/esm-browser/validate.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var r=t("./node_modules/uuid/dist/esm-browser/regex.js");const o=function(e){return"string"==typeof e&&r.default.test(e)}},"./src/dom.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>l});var r=t("./src/project.js"),o=t("./src/task.js");const s=document.querySelector(".project-list"),a=document.querySelector(".project-form").querySelector("input[name='add-project']"),i=document.querySelector(".main-container"),d=document.createElement("div");d.classList="task-list";const c=()=>{s.textContent="",r.PM.projects.forEach((e=>{const n=document.createElement("div"),t=document.createElement("h3"),a=document.createElement("button"),c=document.createElement("button");t.textContent=`Project: ${e.title}`,t.setAttribute("project-index",e.id),t.className="project-div",n.className="project-container",a.className="add-project-task",a.textContent="Add Task",c.textContent="Delete",c.className="delete-project",t.append(c),n.append(t),s.append(n),n.append(a,c),a.addEventListener("click",(n=>{n.preventDefault();const t=(()=>{const e=document.getElementById("task-title").value,n=document.getElementById("due-date").value,t=document.getElementById("task-priority").value;return(0,o.default)(e,n,t)})();e.addTask(t);const r=document.createElement("div"),s=document.createElement("project"),a=document.createElement("task"),c=document.createElement("due-date"),A=document.createElement("priority"),l=document.createElement("button");l.textContent="✕",s.textContent=`Project: ${e.title}`,a.textContent=`Task: ${t.title}`,c.textContent=`Due-date: ${t.dueDate}`,A.textContent=`Priority: ${t.priority}`,s.className="project-task",r.className="task-div",r.setAttribute("task-div",t.id),a.className="task-title",c.className="task-due-date",A.className="task-priority",l.className="delete-task-btn",r.append(l,s,a,c,A);const p=document.createElement("div");p.classList="task-container",p.append(r),d.append(r),l.addEventListener("click",(()=>{e.deleteTask(t),r.remove()})),i.append(d)})),c.addEventListener("click",(n=>{n.preventDefault(),r.PM.deleteProject(e),t.remove(),a.remove(),c.remove();document.querySelectorAll(".task-div").forEach((n=>{n.textContent.includes(e.title)&&n.remove()}))}))}))};document.addEventListener("DOMContentLoaded",c);const A=e=>{e.preventDefault();const n=(()=>{const e=document.getElementById("project").value;return""===e?null:(0,r.projectFactory)(e)})();if(!n)return;r.PM.projects.some((e=>e.title===n.title))||(r.PM.addProject(n),c())};a.addEventListener("click",A);const l=A},"./src/project.js":(e,n,t)=>{t.r(n),t.d(n,{PM:()=>o,projectFactory:()=>s});var r=t("./node_modules/uuid/dist/esm-browser/v4.js");const o={projects:[],localStorage(){const e=localStorage.getItem("projects");e&&(this.projects=JSON.parse(e))},addProject(e){this.projects.push(e),localStorage.setItem("projects",JSON.stringify(this.projects))},deleteProject(e){const n=this.projects.indexOf(e);return-1!==n&&(this.projects.splice(n,1),localStorage.setItem("projects",JSON.stringify(this.projects)),!0)},updateProject(e,n){for(let t=0;t<this.projects.length;t+=1)if(this.projects[t].id===e)return this.projects[t].title!==n&&(this.projects[t].title=n,this.updateLocalStorage(),!0);return!1},updateLocalStorage(){localStorage.setItem("projects",JSON.stringify(this.projects))}},s=e=>({title:e,tasks:[],id:(0,r.default)(),addTask(e){this.tasks.push(e),o.updateLocalStorage()},deleteTask(e){const n=this.tasks.indexOf(e);return-1!==n&&(this.tasks.splice(n,1),o.updateLocalStorage(),!0)},updateTask(e,n){Object.assign(this.tasks.find((n=>n.id===e)),n),o.updateLocalStorage()}});o.localStorage()},"./src/task.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var r=t("./node_modules/uuid/dist/esm-browser/v4.js");const o=(e,n,t)=>{const o=((e,n,t)=>({title:e,dueDate:n,priority:t,id:(0,r.default)()}))(e,n,t);return localStorage.setItem("tasks",JSON.stringify(o)),o}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var s=n[r]={id:r,exports:{}};return e[r](s,s.exports,t),s.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0;var r={};(()=>{t.r(r);t("./src/style.css"),t("./src/dom.js"),t("./src/project.js"),t("./src/task.js")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,