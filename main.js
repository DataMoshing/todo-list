(()=>{"use strict";var e={"./node_modules/css-loader/dist/cjs.js!./src/style.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),o=n.n(r),s=n("./node_modules/css-loader/dist/runtime/api.js"),a=n.n(s)()(o());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter+Tight&display=swap);"]),a.push([e.id,'* {\n    margin: 0;\n    /* padding: 0; */\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter Tight\', sans-serif;\n    font-size: 20px;\n}\n\nmain {\n    display: flex;\n    min-width: 500px;\n}\n\nh1 {\n    display: flex;\n    font-weight: 100;\n    background-color: rgba(207, 207, 207, 0.582);\n    width: 200px;\n}\n\nheader {\n    width: 150px;\n    display: flex;\n}\n\n.add-project-task,\n.delete-project {\n    width: 150px;\n    height: 20px;\n}\n\n.project-input,\n.project-div,\ninput[type="submit"] {\n    display: flex;\n    align-items: center;\n    width: 300px;\n    font-weight: 100;\n}\n\n.project-input {\n    margin-bottom: .5rem;\n    gap: 10px;\n}\n\n.task-input>label {\n    min-width: 500px\n}\n\n.main-container {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n    min-width: 500px\n}\n\n.project-container {\n    display: flex;\n    align-items: center;\n    width: 450px;\n}\n\n.project-container>.add-project-task {\n    margin-right: .5rem;\n}\n\n.project-list {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n}\n\n.project-form {\n    display: flex;\n    margin-bottom: 2rem;\n    flex-direction: column;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n}\n\ninput[name="project"],\ninput[name="title"],\ninput[type="text"] {\n    border: none;\n    background-color: #d6d6d6d7;\n    width: 150px;\n    margin-left: .5rem;\n    border-radius: 0.5rem;\n    height: 1.3rem;\n    padding-bottom: 0.1rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n}\n\ninput[type="date"],\nselect {\n    background-color: #d6d6d6d7;\n    padding: 5px;\n    color: rgba(0, 0, 0, 0.747);\n    border: none;\n    border-radius: 1.5rem;\n}\n\n.task-list,\n.task-div {\n    display: flex;\n    flex-direction: column;\n}\n\n.task-title:hover,\n.task-due-date:hover,\n.task-priority:hover {\n    background-color: #c4c4c48e;\n    cursor: pointer;\n}\n\n.task-div {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 2px 2px;\n    border-radius: 10px;\n    display: flex;\n    margin-top: .5rem;\n    padding: 0 0 .5rem .5rem;\n}\n\n.task-div>.delete-task-btn {\n    width: 30px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 60px;\n    border: solid 1.5px rgb(0 0 0 / 0.7);\n    border: none;\n    margin-left: auto;\n}\n\n.task-div>.delete-task-btn:hover {\n    background-color: #f14410cb;\n}\n\ninput[type="submit"],\n.add-project-task,\n.delete-project {\n    display: flex;\n    justify-content: center;\n    background-color: transparent;\n    border: 2px solid #1A1A1A;\n    border-radius: 10px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    min-height: 25px;\n    min-width: 115px;\n    outline: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    will-change: transform;\n}\n\n.add-project-task:hover,\ninput[type="submit"]:hover {\n    color: #000000;\n    background-color: #80e011;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\n.delete-project:hover {\n    color: #000000;\n    background-color: #f14410cb;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\ninput[type="submit"]:active,\n.add-project-task:active {\n    box-shadow: none;\n    transform: translateY(0);\n}\n\n.edit-task-btn,\n.edit-priority-btn,\n.edit-due-date-btn {\n    width: 100px;\n}\n\n.new-due-date,\n.new-priority {\n    width: 125px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,gBAAgB;IAChB,sBAAsB;IACtB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sCAAsC;IACtC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,4CAA4C;IAC5C,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;;IAEI,YAAY;IACZ,YAAY;AAChB;;AAEA;;;IAGI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,SAAS;AACb;;AAEA;IACI;AACJ;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;;IAGI,YAAY;IACZ,2BAA2B;IAC3B,YAAY;IACZ,kBAAkB;IAClB,qBAAqB;IACrB,cAAc;IACd,sBAAsB;IACtB,oBAAoB;IACpB,qBAAqB;AACzB;;AAEA;;IAEI,2BAA2B;IAC3B,YAAY;IACZ,2BAA2B;IAC3B,YAAY;IACZ,qBAAqB;AACzB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;;IAGI,2BAA2B;IAC3B,eAAe;AACnB;;AAEA;IACI,8EAA8E;IAC9E,mBAAmB;IACnB,aAAa;IACb,iBAAiB;IACjB,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,oCAAoC;IACpC,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;;;IAGI,aAAa;IACb,uBAAuB;IACvB,6BAA6B;IAC7B,yBAAyB;IACzB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,mDAAmD;IACnD,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;;IAEI,cAAc;IACd,yBAAyB;IACzB,0CAA0C;AAC9C;;AAEA;IACI,cAAc;IACd,2BAA2B;IAC3B,0CAA0C;AAC9C;;AAEA;;IAEI,gBAAgB;IAChB,wBAAwB;AAC5B;;AAEA;;;IAGI,YAAY;AAChB;;AAEA;;IAEI,YAAY;AAChB",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Inter+Tight&display=swap\');\n\n* {\n    margin: 0;\n    /* padding: 0; */\n    box-sizing: border-box;\n    text-decoration: none;\n    list-style: none;\n}\n\nbody {\n    display: flex;\n    font-family: \'Inter Tight\', sans-serif;\n    font-size: 20px;\n}\n\nmain {\n    display: flex;\n    min-width: 500px;\n}\n\nh1 {\n    display: flex;\n    font-weight: 100;\n    background-color: rgba(207, 207, 207, 0.582);\n    width: 200px;\n}\n\nheader {\n    width: 150px;\n    display: flex;\n}\n\n.add-project-task,\n.delete-project {\n    width: 150px;\n    height: 20px;\n}\n\n.project-input,\n.project-div,\ninput[type="submit"] {\n    display: flex;\n    align-items: center;\n    width: 300px;\n    font-weight: 100;\n}\n\n.project-input {\n    margin-bottom: .5rem;\n    gap: 10px;\n}\n\n.task-input>label {\n    min-width: 500px\n}\n\n.main-container {\n    display: flex;\n    flex-direction: column;\n    margin-left: 1rem;\n    min-width: 500px\n}\n\n.project-container {\n    display: flex;\n    align-items: center;\n    width: 450px;\n}\n\n.project-container>.add-project-task {\n    margin-right: .5rem;\n}\n\n.project-list {\n    display: flex;\n    flex-direction: column;\n    width: 500px;\n}\n\n.project-form {\n    display: flex;\n    margin-bottom: 2rem;\n    flex-direction: column;\n}\n\n.task-form {\n    display: flex;\n    flex-direction: column;\n}\n\ninput[name="project"],\ninput[name="title"],\ninput[type="text"] {\n    border: none;\n    background-color: #d6d6d6d7;\n    width: 150px;\n    margin-left: .5rem;\n    border-radius: 0.5rem;\n    height: 1.3rem;\n    padding-bottom: 0.1rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n}\n\ninput[type="date"],\nselect {\n    background-color: #d6d6d6d7;\n    padding: 5px;\n    color: rgba(0, 0, 0, 0.747);\n    border: none;\n    border-radius: 1.5rem;\n}\n\n.task-list,\n.task-div {\n    display: flex;\n    flex-direction: column;\n}\n\n.task-title:hover,\n.task-due-date:hover,\n.task-priority:hover {\n    background-color: #c4c4c48e;\n    cursor: pointer;\n}\n\n.task-div {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 2px 2px;\n    border-radius: 10px;\n    display: flex;\n    margin-top: .5rem;\n    padding: 0 0 .5rem .5rem;\n}\n\n.task-div>.delete-task-btn {\n    width: 30px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 60px;\n    border: solid 1.5px rgb(0 0 0 / 0.7);\n    border: none;\n    margin-left: auto;\n}\n\n.task-div>.delete-task-btn:hover {\n    background-color: #f14410cb;\n}\n\ninput[type="submit"],\n.add-project-task,\n.delete-project {\n    display: flex;\n    justify-content: center;\n    background-color: transparent;\n    border: 2px solid #1A1A1A;\n    border-radius: 10px;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    min-height: 25px;\n    min-width: 115px;\n    outline: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    will-change: transform;\n}\n\n.add-project-task:hover,\ninput[type="submit"]:hover {\n    color: #000000;\n    background-color: #80e011;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\n.delete-project:hover {\n    color: #000000;\n    background-color: #f14410cb;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n}\n\ninput[type="submit"]:active,\n.add-project-task:active {\n    box-shadow: none;\n    transform: translateY(0);\n}\n\n.edit-task-btn,\n.edit-priority-btn,\n.edit-due-date-btn {\n    width: 100px;\n}\n\n.new-due-date,\n.new-priority {\n    width: 125px;\n}'],sourceRoot:""}]);const i=a},"./node_modules/css-loader/dist/runtime/api.js":e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(a[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},"./src/style.css":(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var r=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),o=n.n(r),s=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),a=n.n(s),i=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),d=n.n(i),c=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),l=n.n(c),A=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),u=n.n(A),p=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),m=n.n(p),f=n("./node_modules/css-loader/dist/cjs.js!./src/style.css"),b={};b.styleTagTransform=m(),b.setAttributes=l(),b.insert=d().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u();o()(f.default,b);const y=f.default&&f.default.locals?f.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},a=[],i=0;i<e.length;i++){var d=e[i],c=r.base?d[0]+r.base:d[0],l=s[c]||0,A="".concat(c," ").concat(l);s[c]=l+1;var u=n(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,r);r.byIndex=i,t.splice(i,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function o(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var i=n(s[a]);t[i].references--}for(var d=r(e,o),c=0;c<s.length;c++){var l=n(s[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}s=d}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},"./node_modules/uuid/dist/esm-browser/native.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)}},"./node_modules/uuid/dist/esm-browser/regex.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},"./node_modules/uuid/dist/esm-browser/rng.js":(e,t,n)=>{let r;n.r(t),n.d(t,{default:()=>s});const o=new Uint8Array(16);function s(){if(!r&&(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}},"./node_modules/uuid/dist/esm-browser/stringify.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a,unsafeStringify:()=>s});var r=n("./node_modules/uuid/dist/esm-browser/validate.js");const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function s(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}const a=function(e,t=0){const n=s(e,t);if(!(0,r.default)(n))throw TypeError("Stringified UUID is invalid");return n}},"./node_modules/uuid/dist/esm-browser/v4.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("./node_modules/uuid/dist/esm-browser/native.js"),o=n("./node_modules/uuid/dist/esm-browser/rng.js"),s=n("./node_modules/uuid/dist/esm-browser/stringify.js");const a=function(e,t,n){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const a=(e=e||{}).random||(e.rng||o.default)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return(0,s.unsafeStringify)(a)}},"./node_modules/uuid/dist/esm-browser/validate.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("./node_modules/uuid/dist/esm-browser/regex.js");const o=function(e){return"string"==typeof e&&r.default.test(e)}},"./src/dom.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n("./src/project.js"),o=n("./src/task.js");const s=document.querySelector(".project-list"),a=document.querySelector(".project-form").querySelector("input[name='add-project']"),i=document.querySelector(".main-container"),d=document.createElement("div");d.classList="task-list";const c=e=>{e.preventDefault();const t=(()=>{const e=document.getElementById("project").value;return""===e?alert("Project name can't be empty"):(0,r.projectFactory)(e)})();r.PM.projects.some((e=>e.title===t.title))||(r.PM.addProject(t),s.textContent="",r.PM.projects.forEach((e=>{const t=document.createElement("div"),n=document.createElement("h3"),a=document.createElement("button"),c=document.createElement("button");n.textContent=`Project: ${e.title}`,n.setAttribute("project-index",e.id),n.className="project-div",t.className="project-container",a.className="add-project-task",a.textContent="Add Task",c.textContent="Delete",c.className="delete-project",n.append(c),t.append(n),s.append(t),t.append(a,c),a.addEventListener("click",(t=>{t.preventDefault();const n=(()=>{const e=document.getElementById("task-title").value,t=document.getElementById("due-date").value,n=document.getElementById("task-priority").value;return(0,o.default)(e,t,n)})();console.log(n),console.log(e),e.addTask(n);const r=document.createElement("div"),s=document.createElement("project"),a=document.createElement("task"),c=document.createElement("due-date"),l=document.createElement("priority"),A=document.createElement("button");A.textContent="✕",s.textContent=`Project: ${e.title}`,a.textContent=`Task: ${n.title}`,c.textContent=`Due-date: ${n.dueDate}`,l.textContent=`Priority: ${n.priority}`,s.className="project-task",r.className="task-div",r.setAttribute("task-div",n.id),a.className="task-title",c.className="task-due-date",l.className="task-priority",A.className="delete-task-btn",r.append(A,s,a,c,l);const u=document.createElement("div");u.classList="task-container",u.append(r),d.append(r);const p=document.createElement("form"),m=document.createElement("input"),f=document.createElement("label"),b=document.createElement("button"),y=document.createElement("button"),g=document.createElement("button"),x=document.createElement("select"),h=document.createElement("input");b.textContent="Edit task",b.className="edit-task-btn",y.textContent="Edit Priority",g.textContent="Edit Due date",g.className="edit-due-date-btn",y.className="edit-priority-btn",m.id="new-task-input",a.addEventListener("click",(()=>{m.type="text",m.name="new-task-input",f.setAttribute("for","updated-task"),f.textContent="Update task: ",f.append(m),p.append(f),r.append(p,b)})),b.addEventListener("click",(()=>{e.updateTask(n.id,{title:`${m.value}`}),a.textContent=`Task: ${m.value}`,f.remove(),m.remove(),b.remove()})),l.addEventListener("click",(()=>{const e=document.createElement("option"),t=document.createElement("option"),n=document.createElement("option");e.text="Low",t.text="Medium",n.text="High",x.textContent="New Priority: ",x.className="new-priority",x.append(e,t,n),r.append(x,y)})),y.addEventListener("click",(()=>{e.updateTask(n.id,{priority:`${x.value}`}),l.textContent=`Priority: ${x.value}`,x.remove(),y.remove()})),c.addEventListener("click",(()=>{h.setAttribute("type","date"),h.className="new-due-date",r.append(h,g)})),g.addEventListener("click",(()=>{e.updateTask(n.id,{dueDate:`${h.value}`}),c.textContent=`Due-date ${h.value}`,h.remove(),g.remove()})),A.addEventListener("click",(()=>{e.deleteTask(n),r.remove()})),i.append(d)})),c.addEventListener("click",(t=>{t.preventDefault(),r.PM.deleteProject(e),n.remove(),a.remove(),c.remove();const o=document.querySelectorAll(".task-div");for(let t=0;t<o.length;t+=1)o[t].textContent.includes(e.title)&&o[t].remove()}))})))};a.addEventListener("click",c);const l=c},"./src/project.js":(e,t,n)=>{n.r(t),n.d(t,{PM:()=>o,projectFactory:()=>s});var r=n("./node_modules/uuid/dist/esm-browser/v4.js");const o={projects:[],addProject(e){this.projects.push(e)},deleteProject(e){const t=this.projects.indexOf(e);return-1!==t&&(this.projects.splice(t,1),!0)},updateProject(e,t){for(let n=0;n<this.projects.length;n+=1)if(this.projects[n].id===e)return this.projects[n].title!==t&&(this.projects[n].title=t,!0);return!1}},s=e=>({title:e,tasks:[],id:(0,r.default)(),addTask(e){this.tasks.push(e)},deleteTask(e){const t=this.tasks.indexOf(e);return-1!==t&&(this.tasks.splice(t,1),!0)},updateTask(e,t){Object.assign(this.tasks.find((t=>t.id===e)),t)}})},"./src/task.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("./node_modules/uuid/dist/esm-browser/v4.js");const o=(e,t,n)=>{const o=((e,t,n)=>({title:e,dueDate:t,priority:n,id:(0,r.default)()}))(e,t,n);return o}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0;var r={};(()=>{n.r(r);n("./src/style.css"),n("./src/dom.js"),n("./src/project.js"),n("./src/task.js")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFTOEwsRUFBeUJFLEdBQVksQ0FDakQvTCxHQUFJK0wsRUFFSjlMLFFBQVMsQ0FBQyxHQU9YLE9BSEFnTSxFQUFvQkYsR0FBVWhNLEVBQVFBLEVBQU9FLFFBQVM2TCxHQUcvQy9MLEVBQU9FLE9BQ2YsQ0NyQkE2TCxFQUFvQkksRUFBS25NLElBQ3hCLElBQUlvTSxFQUFTcE0sR0FBVUEsRUFBT3FNLFdBQzdCLElBQU9yTSxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQStMLEVBQW9CTyxFQUFFRixFQUFRLENBQUVHLEVBQUdILElBQzVCQSxDQUFNLEVDTGRMLEVBQW9CTyxFQUFJLENBQUNwTSxFQUFTc00sS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYVCxFQUFvQlcsRUFBRUYsRUFBWUMsS0FBU1YsRUFBb0JXLEVBQUV4TSxFQUFTdU0sSUFDNUVoQixPQUFPa0IsZUFBZXpNLEVBQVN1TSxFQUFLLENBQUVHLFlBQVksRUFBTUMsSUFBS0wsRUFBV0MsSUFFMUUsRUNORFYsRUFBb0JXLEVBQUksQ0FBQ3pKLEVBQUs2SixJQUFVckIsT0FBT3NCLFVBQVVDLGVBQWVDLEtBQUtoSyxFQUFLNkosR0NDbEZmLEVBQW9CbUIsRUFBS2hOLElBQ0gsb0JBQVhpTixRQUEwQkEsT0FBT0MsYUFDMUMzQixPQUFPa0IsZUFBZXpNLEVBQVNpTixPQUFPQyxZQUFhLENBQUV6RixNQUFPLFdBRTdEOEQsT0FBT2tCLGVBQWV6TSxFQUFTLGFBQWMsQ0FBRXlILE9BQU8sR0FBTyxFQ0w5RG9FLEVBQW9Cc0IsUUFBS2pNLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9uYXRpdmUuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9yZWdleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2RvbS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdGFzay5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUludGVyK1RpZ2h0JmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIC8qIHBhZGRpbmc6IDA7ICovXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuYm9keSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZvbnQtZmFtaWx5OiAnSW50ZXIgVGlnaHQnLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbm1haW4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xcbn1cXG5cXG5oMSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjA3LCAyMDcsIDIwNywgMC41ODIpO1xcbiAgICB3aWR0aDogMjAwcHg7XFxufVxcblxcbmhlYWRlciB7XFxuICAgIHdpZHRoOiAxNTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LXRhc2ssXFxuLmRlbGV0ZS1wcm9qZWN0IHtcXG4gICAgd2lkdGg6IDE1MHB4O1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxufVxcblxcbi5wcm9qZWN0LWlucHV0LFxcbi5wcm9qZWN0LWRpdixcXG5pbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHdpZHRoOiAzMDBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcXG59XFxuXFxuLnByb2plY3QtaW5wdXQge1xcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4udGFzay1pbnB1dD5sYWJlbCB7XFxuICAgIG1pbi13aWR0aDogNTAwcHhcXG59XFxuXFxuLm1haW4tY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XFxuICAgIG1pbi13aWR0aDogNTAwcHhcXG59XFxuXFxuLnByb2plY3QtY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDQ1MHB4O1xcbn1cXG5cXG4ucHJvamVjdC1jb250YWluZXI+LmFkZC1wcm9qZWN0LXRhc2sge1xcbiAgICBtYXJnaW4tcmlnaHQ6IC41cmVtO1xcbn1cXG5cXG4ucHJvamVjdC1saXN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgd2lkdGg6IDUwMHB4O1xcbn1cXG5cXG4ucHJvamVjdC1mb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLnRhc2stZm9ybSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbmlucHV0W25hbWU9XFxcInByb2plY3RcXFwiXSxcXG5pbnB1dFtuYW1lPVxcXCJ0aXRsZVxcXCJdLFxcbmlucHV0W3R5cGU9XFxcInRleHRcXFwiXSB7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q2ZDZkNmQ3O1xcbiAgICB3aWR0aDogMTUwcHg7XFxuICAgIG1hcmdpbi1sZWZ0OiAuNXJlbTtcXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcbiAgICBoZWlnaHQ6IDEuM3JlbTtcXG4gICAgcGFkZGluZy1ib3R0b206IDAuMXJlbTtcXG4gICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XFxuICAgIHBhZGRpbmctcmlnaHQ6IDAuNXJlbTtcXG59XFxuXFxuaW5wdXRbdHlwZT1cXFwiZGF0ZVxcXCJdLFxcbnNlbGVjdCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkNmQ2ZDZkNztcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjc0Nyk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMS41cmVtO1xcbn1cXG5cXG4udGFzay1saXN0LFxcbi50YXNrLWRpdiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcblxcbi50YXNrLXRpdGxlOmhvdmVyLFxcbi50YXNrLWR1ZS1kYXRlOmhvdmVyLFxcbi50YXNrLXByaW9yaXR5OmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2M0YzRjNDhlO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50YXNrLWRpdiB7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xOSkgMHB4IDEwcHggMjBweCwgcmdiYSgwLCAwLCAwLCAwLjIzKSAwcHggMnB4IDJweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWFyZ2luLXRvcDogLjVyZW07XFxuICAgIHBhZGRpbmc6IDAgMCAuNXJlbSAuNXJlbTtcXG59XFxuXFxuLnRhc2stZGl2Pi5kZWxldGUtdGFzay1idG4ge1xcbiAgICB3aWR0aDogMzBweDtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDYwcHg7XFxuICAgIGJvcmRlcjogc29saWQgMS41cHggcmdiKDAgMCAwIC8gMC43KTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXG59XFxuXFxuLnRhc2stZGl2Pi5kZWxldGUtdGFzay1idG46aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjE0NDEwY2I7XFxufVxcblxcbmlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdLFxcbi5hZGQtcHJvamVjdC10YXNrLFxcbi5kZWxldGUtcHJvamVjdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgIzFBMUExQTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICAgIG1pbi1oZWlnaHQ6IDI1cHg7XFxuICAgIG1pbi13aWR0aDogMTE1cHg7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBjdWJpYy1iZXppZXIoLjIzLCAxLCAwLjMyLCAxKTtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XFxufVxcblxcbi5hZGQtcHJvamVjdC10YXNrOmhvdmVyLFxcbmlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdOmhvdmVyIHtcXG4gICAgY29sb3I6ICMwMDAwMDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4MGUwMTE7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4yNSkgMCA4cHggMTVweDtcXG59XFxuXFxuLmRlbGV0ZS1wcm9qZWN0OmhvdmVyIHtcXG4gICAgY29sb3I6ICMwMDAwMDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMTQ0MTBjYjtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjI1KSAwIDhweCAxNXB4O1xcbn1cXG5cXG5pbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXTphY3RpdmUsXFxuLmFkZC1wcm9qZWN0LXRhc2s6YWN0aXZlIHtcXG4gICAgYm94LXNoYWRvdzogbm9uZTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xcbn1cXG5cXG4uZWRpdC10YXNrLWJ0bixcXG4uZWRpdC1wcmlvcml0eS1idG4sXFxuLmVkaXQtZHVlLWRhdGUtYnRuIHtcXG4gICAgd2lkdGg6IDEwMHB4O1xcbn1cXG5cXG4ubmV3LWR1ZS1kYXRlLFxcbi5uZXctcHJpb3JpdHkge1xcbiAgICB3aWR0aDogMTI1cHg7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7SUFDSSxTQUFTO0lBQ1QsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNDQUFzQztJQUN0QyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNENBQTRDO0lBQzVDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTs7SUFFSSxZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTs7O0lBR0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLFNBQVM7QUFDYjs7QUFFQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGlCQUFpQjtJQUNqQjtBQUNKOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0FBQzFCOztBQUVBOzs7SUFHSSxZQUFZO0lBQ1osMkJBQTJCO0lBQzNCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLHFCQUFxQjtBQUN6Qjs7QUFFQTs7SUFFSSwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCOztBQUVBOztJQUVJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7OztJQUdJLDJCQUEyQjtJQUMzQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksOEVBQThFO0lBQzlFLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixvQ0FBb0M7SUFDcEMsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTs7O0lBR0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsbURBQW1EO0lBQ25ELGlCQUFpQjtJQUNqQixzQkFBc0I7QUFDMUI7O0FBRUE7O0lBRUksY0FBYztJQUNkLHlCQUF5QjtJQUN6QiwwQ0FBMEM7QUFDOUM7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsMkJBQTJCO0lBQzNCLDBDQUEwQztBQUM5Qzs7QUFFQTs7SUFFSSxnQkFBZ0I7SUFDaEIsd0JBQXdCO0FBQzVCOztBQUVBOzs7SUFHSSxZQUFZO0FBQ2hCOztBQUVBOztJQUVJLFlBQVk7QUFDaEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9SW50ZXIrVGlnaHQmZGlzcGxheT1zd2FwJyk7XFxuXFxuKiB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgLyogcGFkZGluZzogMDsgKi9cXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZm9udC1mYW1pbHk6ICdJbnRlciBUaWdodCcsIHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxubWFpbiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIG1pbi13aWR0aDogNTAwcHg7XFxufVxcblxcbmgxIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZm9udC13ZWlnaHQ6IDEwMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMDcsIDIwNywgMjA3LCAwLjU4Mik7XFxuICAgIHdpZHRoOiAyMDBweDtcXG59XFxuXFxuaGVhZGVyIHtcXG4gICAgd2lkdGg6IDE1MHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uYWRkLXByb2plY3QtdGFzayxcXG4uZGVsZXRlLXByb2plY3Qge1xcbiAgICB3aWR0aDogMTUwcHg7XFxuICAgIGhlaWdodDogMjBweDtcXG59XFxuXFxuLnByb2plY3QtaW5wdXQsXFxuLnByb2plY3QtZGl2LFxcbmlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDMwMHB4O1xcbiAgICBmb250LXdlaWdodDogMTAwO1xcbn1cXG5cXG4ucHJvamVjdC1pbnB1dCB7XFxuICAgIG1hcmdpbi1ib3R0b206IC41cmVtO1xcbiAgICBnYXA6IDEwcHg7XFxufVxcblxcbi50YXNrLWlucHV0PmxhYmVsIHtcXG4gICAgbWluLXdpZHRoOiA1MDBweFxcbn1cXG5cXG4ubWFpbi1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBtYXJnaW4tbGVmdDogMXJlbTtcXG4gICAgbWluLXdpZHRoOiA1MDBweFxcbn1cXG5cXG4ucHJvamVjdC1jb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogNDUwcHg7XFxufVxcblxcbi5wcm9qZWN0LWNvbnRhaW5lcj4uYWRkLXByb2plY3QtdGFzayB7XFxuICAgIG1hcmdpbi1yaWdodDogLjVyZW07XFxufVxcblxcbi5wcm9qZWN0LWxpc3Qge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICB3aWR0aDogNTAwcHg7XFxufVxcblxcbi5wcm9qZWN0LWZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4udGFzay1mb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuaW5wdXRbbmFtZT1cXFwicHJvamVjdFxcXCJdLFxcbmlucHV0W25hbWU9XFxcInRpdGxlXFxcIl0sXFxuaW5wdXRbdHlwZT1cXFwidGV4dFxcXCJdIHtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDZkNmQ2ZDc7XFxuICAgIHdpZHRoOiAxNTBweDtcXG4gICAgbWFyZ2luLWxlZnQ6IC41cmVtO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XFxuICAgIGhlaWdodDogMS4zcmVtO1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMC4xcmVtO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcXG4gICAgcGFkZGluZy1yaWdodDogMC41cmVtO1xcbn1cXG5cXG5pbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl0sXFxuc2VsZWN0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q2ZDZkNmQ3O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNzQ3KTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiAxLjVyZW07XFxufVxcblxcbi50YXNrLWxpc3QsXFxuLnRhc2stZGl2IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLnRhc2stdGl0bGU6aG92ZXIsXFxuLnRhc2stZHVlLWRhdGU6aG92ZXIsXFxuLnRhc2stcHJpb3JpdHk6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzRjNGM0OGU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnRhc2stZGl2IHtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE5KSAwcHggMTBweCAyMHB4LCByZ2JhKDAsIDAsIDAsIDAuMjMpIDBweCAycHggMnB4O1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtYXJnaW4tdG9wOiAuNXJlbTtcXG4gICAgcGFkZGluZzogMCAwIC41cmVtIC41cmVtO1xcbn1cXG5cXG4udGFzay1kaXY+LmRlbGV0ZS10YXNrLWJ0biB7XFxuICAgIHdpZHRoOiAzMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogNjBweDtcXG4gICAgYm9yZGVyOiBzb2xpZCAxLjVweCByZ2IoMCAwIDAgLyAwLjcpO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbn1cXG5cXG4udGFzay1kaXY+LmRlbGV0ZS10YXNrLWJ0bjpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMTQ0MTBjYjtcXG59XFxuXFxuaW5wdXRbdHlwZT1cXFwic3VibWl0XFxcIl0sXFxuLmFkZC1wcm9qZWN0LXRhc2ssXFxuLmRlbGV0ZS1wcm9qZWN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMUExQTFBO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG4gICAgbWluLWhlaWdodDogMjVweDtcXG4gICAgbWluLXdpZHRoOiAxMTVweDtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGN1YmljLWJlemllciguMjMsIDEsIDAuMzIsIDEpO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgd2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LXRhc2s6aG92ZXIsXFxuaW5wdXRbdHlwZT1cXFwic3VibWl0XFxcIl06aG92ZXIge1xcbiAgICBjb2xvcjogIzAwMDAwMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzgwZTAxMTtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjI1KSAwIDhweCAxNXB4O1xcbn1cXG5cXG4uZGVsZXRlLXByb2plY3Q6aG92ZXIge1xcbiAgICBjb2xvcjogIzAwMDAwMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxNDQxMGNiO1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMjUpIDAgOHB4IDE1cHg7XFxufVxcblxcbmlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdOmFjdGl2ZSxcXG4uYWRkLXByb2plY3QtdGFzazphY3RpdmUge1xcbiAgICBib3gtc2hhZG93OiBub25lO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XFxufVxcblxcbi5lZGl0LXRhc2stYnRuLFxcbi5lZGl0LXByaW9yaXR5LWJ0bixcXG4uZWRpdC1kdWUtZGF0ZS1idG4ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxufVxcblxcbi5uZXctZHVlLWRhdGUsXFxuLm5ldy1wcmlvcml0eSB7XFxuICAgIHdpZHRoOiAxMjVweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmFuZG9tVVVJRFxufTsiLCJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7IiwiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gSW4gdGhlIGJyb3dzZXIgd2UgdGhlcmVmb3JlXG4vLyByZXF1aXJlIHRoZSBjcnlwdG8gQVBJIGFuZCBkbyBub3Qgc3VwcG9ydCBidWlsdC1pbiBmYWxsYmFjayB0byBsb3dlciBxdWFsaXR5IHJhbmRvbSBudW1iZXJcbi8vIGdlbmVyYXRvcnMgKGxpa2UgTWF0aC5yYW5kb20oKSkuXG5sZXQgZ2V0UmFuZG9tVmFsdWVzO1xuY29uc3Qgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi5cbiAgICBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pO1xuXG4gICAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY3J5cHRvLmdldFJhbmRvbVZhbHVlcygpIG5vdCBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQjZ2V0cmFuZG9tdmFsdWVzLW5vdC1zdXBwb3J0ZWQnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbn0iLCJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnNsaWNlKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7IiwiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7IiwiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7IiwiaW1wb3J0IHsgcHJvamVjdEZhY3RvcnksIFBNIH0gZnJvbSBcIi4vcHJvamVjdFwiXG5pbXBvcnQgdGFza0ZhY3RvcnkgZnJvbSBcIi4vdGFza1wiXG5cbmNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWxpc3RcIilcbmNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWZvcm1cIilcbmNvbnN0IHByb2plY3RWYWx1ZSA9IHByb2plY3RGb3JtLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFtuYW1lPSdhZGQtcHJvamVjdCddXCIpXG5jb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLWNvbnRhaW5lclwiKVxuY29uc3QgdGFza0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG50YXNrTGlzdC5jbGFzc0xpc3QgPSBcInRhc2stbGlzdFwiXG5cbmNvbnN0IGNyZWF0ZVRhc2sgPSAoKSA9PiB7XG4gICAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YXNrLXRpdGxlXCIpLnZhbHVlXG4gICAgY29uc3QgdGFza0R1ZWRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR1ZS1kYXRlXCIpLnZhbHVlXG4gICAgY29uc3QgdGFza1ByaW9yaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YXNrLXByaW9yaXR5XCIpLnZhbHVlXG4gICAgY29uc3QgbmV3VGFzayA9IHRhc2tGYWN0b3J5KHRhc2tUaXRsZSxcbiAgICAgICAgdGFza0R1ZWRhdGUsIHRhc2tQcmlvcml0eSlcbiAgICByZXR1cm4gbmV3VGFza1xufVxuXG5jb25zdCBjcmVhdGVQcm9qZWN0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHByb2plY3RJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdFwiKS52YWx1ZVxuICAgIGlmIChwcm9qZWN0SW5wdXQgPT09IFwiXCIpIHtcbiAgICAgICAgcmV0dXJuIGFsZXJ0KFwiUHJvamVjdCBuYW1lIGNhbid0IGJlIGVtcHR5XCIpXG4gICAgfVxuICAgIGNvbnN0IG5ld1Byb2plY3QgPSBwcm9qZWN0RmFjdG9yeShwcm9qZWN0SW5wdXQpXG4gICAgcmV0dXJuIG5ld1Byb2plY3Rcbn1cblxuY29uc3QgdXBkYXRlVUkgPSAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGNvbnN0IG5ld1Byb2plY3QgPSBjcmVhdGVQcm9qZWN0KClcbiAgICAvKiBJdGVyYXRlIHRocm91Z2ggZWFjaCBwcm9qZWN0IGluIGFycmF5IGFuZCBjaGVjayBpZiBjdXJyZW50IHByb2plY3QgdGl0bGUgaXMgZXF1YWwgdG8gbmV3IHByb2plY3RzIHRpdGxlIGlmIG5vdCBjcmVhdGUgbmV3IHByb2plY3QgKi9cbiAgICBjb25zdCBwcm9qZWN0RXhpc3RzID0gUE0ucHJvamVjdHMuc29tZSgocHJvamVjdCkgPT4gcHJvamVjdC50aXRsZSA9PT0gbmV3UHJvamVjdC50aXRsZSlcbiAgICBpZiAoIXByb2plY3RFeGlzdHMpIHtcbiAgICAgICAgUE0uYWRkUHJvamVjdChuZXdQcm9qZWN0KVxuICAgICAgICBwcm9qZWN0TGlzdC50ZXh0Q29udGVudCA9IFwiXCJcbiAgICAgICAgUE0ucHJvamVjdHMuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHByb2plY3RzXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxuICAgICAgICAgICAgY29uc3QgcHJvamVjdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKVxuICAgICAgICAgICAgY29uc3QgYWRkVGFza0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICAgICAgICAgIGNvbnN0IGRlbGV0ZVByb2plY3RCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG5cbiAgICAgICAgICAgIHByb2plY3REaXYudGV4dENvbnRlbnQgPSBgUHJvamVjdDogJHtwcm9qZWN0LnRpdGxlfWBcbiAgICAgICAgICAgIHByb2plY3REaXYuc2V0QXR0cmlidXRlKFwicHJvamVjdC1pbmRleFwiLCBwcm9qZWN0LmlkKVxuXG4gICAgICAgICAgICBwcm9qZWN0RGl2LmNsYXNzTmFtZSA9IFwicHJvamVjdC1kaXZcIlxuICAgICAgICAgICAgcHJvamVjdENvbnRhaW5lci5jbGFzc05hbWUgPSBcInByb2plY3QtY29udGFpbmVyXCJcblxuICAgICAgICAgICAgYWRkVGFza0J0bi5jbGFzc05hbWUgPSBcImFkZC1wcm9qZWN0LXRhc2tcIlxuICAgICAgICAgICAgYWRkVGFza0J0bi50ZXh0Q29udGVudCA9IFwiQWRkIFRhc2tcIlxuICAgICAgICAgICAgZGVsZXRlUHJvamVjdEJ0bi50ZXh0Q29udGVudCA9IFwiRGVsZXRlXCJcbiAgICAgICAgICAgIGRlbGV0ZVByb2plY3RCdG4uY2xhc3NOYW1lID0gXCJkZWxldGUtcHJvamVjdFwiXG4gICAgICAgICAgICBwcm9qZWN0RGl2LmFwcGVuZChkZWxldGVQcm9qZWN0QnRuKVxuICAgICAgICAgICAgcHJvamVjdENvbnRhaW5lci5hcHBlbmQocHJvamVjdERpdilcbiAgICAgICAgICAgIHByb2plY3RMaXN0LmFwcGVuZChwcm9qZWN0Q29udGFpbmVyKVxuICAgICAgICAgICAgcHJvamVjdENvbnRhaW5lci5hcHBlbmQoYWRkVGFza0J0biwgZGVsZXRlUHJvamVjdEJ0bilcblxuXG4gICAgICAgICAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgLy8gU2V0IHZhcmlhYmxlIHRvIGNyZWF0ZVRhc2sgZnVuY3Rpb24gKHRhc2tGYWN0b3J5KVxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Rhc2sgPSBjcmVhdGVUYXNrKClcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhuZXdUYXNrKVxuICAgICAgICAgICAgICAgIC8vIEFkZCBuZXcgdGFzayB0byBjdXJyZW50IHByb2plY3RcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwcm9qZWN0KVxuICAgICAgICAgICAgICAgIHByb2plY3QuYWRkVGFzayhuZXdUYXNrKVxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBlbGVtZW50cyB0byBkaXNwbGF5IGxvZ2ljXG4gICAgICAgICAgICAgICAgY29uc3QgdGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIilcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0VGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcm9qZWN0XCIpXG4gICAgICAgICAgICAgICAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRhc2tcIilcbiAgICAgICAgICAgICAgICBjb25zdCB0YXNrRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkdWUtZGF0ZVwiKVxuICAgICAgICAgICAgICAgIGNvbnN0IHRhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwcmlvcml0eVwiKVxuICAgICAgICAgICAgICAgIGNvbnN0IGRlbGV0ZVRhc2tCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgICAgICAgICAgZGVsZXRlVGFza0J0bi50ZXh0Q29udGVudCA9IFwi4pyVXCJcblxuICAgICAgICAgICAgICAgIHByb2plY3RUYXNrLnRleHRDb250ZW50ID0gYFByb2plY3Q6ICR7cHJvamVjdC50aXRsZX1gXG4gICAgICAgICAgICAgICAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gYFRhc2s6ICR7bmV3VGFzay50aXRsZX1gXG4gICAgICAgICAgICAgICAgdGFza0RhdGUudGV4dENvbnRlbnQgPSBgRHVlLWRhdGU6ICR7bmV3VGFzay5kdWVEYXRlfWBcbiAgICAgICAgICAgICAgICB0YXNrUHJpb3JpdHkudGV4dENvbnRlbnQgPSBgUHJpb3JpdHk6ICR7bmV3VGFzay5wcmlvcml0eX1gXG5cbiAgICAgICAgICAgICAgICBwcm9qZWN0VGFzay5jbGFzc05hbWUgPSBcInByb2plY3QtdGFza1wiXG4gICAgICAgICAgICAgICAgdGFza0Rpdi5jbGFzc05hbWUgPSBcInRhc2stZGl2XCJcbiAgICAgICAgICAgICAgICB0YXNrRGl2LnNldEF0dHJpYnV0ZShcInRhc2stZGl2XCIsIG5ld1Rhc2suaWQpXG4gICAgICAgICAgICAgICAgdGFza1RpdGxlLmNsYXNzTmFtZSA9IFwidGFzay10aXRsZVwiXG4gICAgICAgICAgICAgICAgdGFza0RhdGUuY2xhc3NOYW1lID0gXCJ0YXNrLWR1ZS1kYXRlXCJcbiAgICAgICAgICAgICAgICB0YXNrUHJpb3JpdHkuY2xhc3NOYW1lID0gXCJ0YXNrLXByaW9yaXR5XCJcbiAgICAgICAgICAgICAgICBkZWxldGVUYXNrQnRuLmNsYXNzTmFtZSA9IFwiZGVsZXRlLXRhc2stYnRuXCJcblxuICAgICAgICAgICAgICAgIHRhc2tEaXYuYXBwZW5kKGRlbGV0ZVRhc2tCdG4sIHByb2plY3RUYXNrLCB0YXNrVGl0bGUsIHRhc2tEYXRlLCB0YXNrUHJpb3JpdHkpXG5cbiAgICAgICAgICAgICAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxuICAgICAgICAgICAgICAgIHRhc2tDb250YWluZXIuY2xhc3NMaXN0ID0gXCJ0YXNrLWNvbnRhaW5lclwiXG4gICAgICAgICAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmQodGFza0RpdilcblxuICAgICAgICAgICAgICAgIHRhc2tMaXN0LmFwcGVuZCh0YXNrRGl2KVxuXG4gICAgICAgICAgICAgICAgLy8gRWRpdCB0YXNrIGVsZW1lbnRzXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3Rm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIilcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdUYXNrTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIilcbiAgICAgICAgICAgICAgICBjb25zdCBlZGl0VGFza0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICAgICAgICAgICAgICBjb25zdCBlZGl0UHJpb3JpdHlCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgICAgICAgICAgY29uc3QgZWRpdER1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3UHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3RHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKVxuXG4gICAgICAgICAgICAgICAgZWRpdFRhc2tCdG4udGV4dENvbnRlbnQgPSBcIkVkaXQgdGFza1wiXG4gICAgICAgICAgICAgICAgZWRpdFRhc2tCdG4uY2xhc3NOYW1lID0gXCJlZGl0LXRhc2stYnRuXCJcbiAgICAgICAgICAgICAgICBlZGl0UHJpb3JpdHlCdG4udGV4dENvbnRlbnQgPSBcIkVkaXQgUHJpb3JpdHlcIlxuICAgICAgICAgICAgICAgIGVkaXREdWVEYXRlLnRleHRDb250ZW50ID0gXCJFZGl0IER1ZSBkYXRlXCJcbiAgICAgICAgICAgICAgICBlZGl0RHVlRGF0ZS5jbGFzc05hbWUgPSBcImVkaXQtZHVlLWRhdGUtYnRuXCJcbiAgICAgICAgICAgICAgICBlZGl0UHJpb3JpdHlCdG4uY2xhc3NOYW1lID0gXCJlZGl0LXByaW9yaXR5LWJ0blwiXG4gICAgICAgICAgICAgICAgbmV3SW5wdXQuaWQgPSBcIm5ldy10YXNrLWlucHV0XCJcblxuICAgICAgICAgICAgICAgIC8vIEVkaXQgY3VycmVudCB0YXNrIFxuICAgICAgICAgICAgICAgIHRhc2tUaXRsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBuZXdJbnB1dC50eXBlID0gXCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgbmV3SW5wdXQubmFtZSA9IFwibmV3LXRhc2staW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICBuZXdUYXNrTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwidXBkYXRlZC10YXNrXCIpXG4gICAgICAgICAgICAgICAgICAgIG5ld1Rhc2tMYWJlbC50ZXh0Q29udGVudCA9IFwiVXBkYXRlIHRhc2s6IFwiXG4gICAgICAgICAgICAgICAgICAgIG5ld1Rhc2tMYWJlbC5hcHBlbmQobmV3SW5wdXQpXG4gICAgICAgICAgICAgICAgICAgIG5ld0Zvcm0uYXBwZW5kKG5ld1Rhc2tMYWJlbClcbiAgICAgICAgICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmQobmV3Rm9ybSwgZWRpdFRhc2tCdG4pXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIGVkaXRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3QudXBkYXRlVGFzayhuZXdUYXNrLmlkLCB7IHRpdGxlOiBgJHtuZXdJbnB1dC52YWx1ZX1gIH0pXG4gICAgICAgICAgICAgICAgICAgIHRhc2tUaXRsZS50ZXh0Q29udGVudCA9IGBUYXNrOiAke25ld0lucHV0LnZhbHVlfWBcbiAgICAgICAgICAgICAgICAgICAgbmV3VGFza0xhYmVsLnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgICAgIG5ld0lucHV0LnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgICAgIGVkaXRUYXNrQnRuLnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIHRhc2tQcmlvcml0eS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdQcmlvcml0eUxvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ByaW9yaXR5TWVkaXVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3UHJpb3JpdHlIaWdoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJpb3JpdHlMb3cudGV4dCA9IFwiTG93XCJcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJpb3JpdHlNZWRpdW0udGV4dCA9IFwiTWVkaXVtXCJcbiAgICAgICAgICAgICAgICAgICAgbmV3UHJpb3JpdHlIaWdoLnRleHQgPSBcIkhpZ2hcIlxuICAgICAgICAgICAgICAgICAgICBuZXdQcmlvcml0eS50ZXh0Q29udGVudCA9IFwiTmV3IFByaW9yaXR5OiBcIlxuICAgICAgICAgICAgICAgICAgICBuZXdQcmlvcml0eS5jbGFzc05hbWUgPSBcIm5ldy1wcmlvcml0eVwiXG4gICAgICAgICAgICAgICAgICAgIG5ld1ByaW9yaXR5LmFwcGVuZChuZXdQcmlvcml0eUxvdywgbmV3UHJpb3JpdHlNZWRpdW0sIG5ld1ByaW9yaXR5SGlnaClcbiAgICAgICAgICAgICAgICAgICAgdGFza0Rpdi5hcHBlbmQobmV3UHJpb3JpdHksIGVkaXRQcmlvcml0eUJ0bilcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgZWRpdFByaW9yaXR5QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHByb2plY3QudXBkYXRlVGFzayhuZXdUYXNrLmlkLCB7IHByaW9yaXR5OiBgJHtuZXdQcmlvcml0eS52YWx1ZX1gIH0pXG4gICAgICAgICAgICAgICAgICAgIHRhc2tQcmlvcml0eS50ZXh0Q29udGVudCA9IGBQcmlvcml0eTogJHtuZXdQcmlvcml0eS52YWx1ZX1gXG4gICAgICAgICAgICAgICAgICAgIG5ld1ByaW9yaXR5LnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgICAgIGVkaXRQcmlvcml0eUJ0bi5yZW1vdmUoKVxuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICB0YXNrRGF0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBuZXdEdWVEYXRlLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJkYXRlXCIpXG4gICAgICAgICAgICAgICAgICAgIG5ld0R1ZURhdGUuY2xhc3NOYW1lID0gXCJuZXctZHVlLWRhdGVcIlxuICAgICAgICAgICAgICAgICAgICB0YXNrRGl2LmFwcGVuZChuZXdEdWVEYXRlLCBlZGl0RHVlRGF0ZSlcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgZWRpdER1ZURhdGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC51cGRhdGVUYXNrKG5ld1Rhc2suaWQsIHsgZHVlRGF0ZTogYCR7bmV3RHVlRGF0ZS52YWx1ZX1gIH0pXG4gICAgICAgICAgICAgICAgICAgIHRhc2tEYXRlLnRleHRDb250ZW50ID0gYER1ZS1kYXRlICR7bmV3RHVlRGF0ZS52YWx1ZX1gXG4gICAgICAgICAgICAgICAgICAgIG5ld0R1ZURhdGUucmVtb3ZlKClcbiAgICAgICAgICAgICAgICAgICAgZWRpdER1ZURhdGUucmVtb3ZlKClcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBzaW5nbGUgdGFza1xuICAgICAgICAgICAgICAgIGRlbGV0ZVRhc2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC5kZWxldGVUYXNrKG5ld1Rhc2spXG4gICAgICAgICAgICAgICAgICAgIHRhc2tEaXYucmVtb3ZlKClcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIG1haW4uYXBwZW5kKHRhc2tMaXN0KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC8vIERlbGV0ZSBwcm9qZWN0ICsgdGFza3NcbiAgICAgICAgICAgIGRlbGV0ZVByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgICAgICBQTS5kZWxldGVQcm9qZWN0KHByb2plY3QpXG4gICAgICAgICAgICAgICAgcHJvamVjdERpdi5yZW1vdmUoKVxuICAgICAgICAgICAgICAgIGFkZFRhc2tCdG4ucmVtb3ZlKClcbiAgICAgICAgICAgICAgICBkZWxldGVQcm9qZWN0QnRuLnJlbW92ZSgpXG4gICAgICAgICAgICAgICAgLy8gU2VsZWN0IGFsbCB0YXNrIGRpdnNcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9qZWN0VGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRhc2stZGl2XCIpO1xuICAgICAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBhbGwgdGFzayBkaXZzIGluIGN1cnJlbnQgcHJvamVjdCBhbmQgcmVtb3ZlXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9qZWN0VGFza3MubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgY3VycmVudCBwcm9qZWN0IHRhc2sgaW5jbHVkZXMgcHJvamVjdCB0aXRsZSByZW1vdmUgcHJvamVjdCB0YXNrc1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvamVjdFRhc2tzW2ldLnRleHRDb250ZW50LmluY2x1ZGVzKHByb2plY3QudGl0bGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9qZWN0VGFza3NbaV0ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbn1cblxuXG5wcm9qZWN0VmFsdWUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHVwZGF0ZVVJKTtcblxuZXhwb3J0IGRlZmF1bHQgdXBkYXRlVUkiLCJpbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xuXG5jb25zdCBQTSA9IHtcbiAgICBwcm9qZWN0czogW10sXG4gICAgYWRkUHJvamVjdChwcm9qZWN0KSB7XG4gICAgICAgIHRoaXMucHJvamVjdHMucHVzaChwcm9qZWN0KVxuICAgIH0sXG4gICAgZGVsZXRlUHJvamVjdChwcm9qZWN0KSB7XG4gICAgICAgIGNvbnN0IHByb2plY3RJbmRleCA9IHRoaXMucHJvamVjdHMuaW5kZXhPZihwcm9qZWN0KVxuICAgICAgICBpZiAocHJvamVjdEluZGV4ICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5wcm9qZWN0cy5zcGxpY2UocHJvamVjdEluZGV4LCAxKVxuICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICB9LFxuICAgIHVwZGF0ZVByb2plY3QocHJvamVjdElkLCBuZXdUaXRsZSkge1xuICAgICAgICAvLyBJdGVyYXRlIHRocm91Z2ggcHJvamVjdHMgYXJyYXlcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnByb2plY3RzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBjdXJyZW50IGl0ZXJhdGlvbiBwcm9qZWN0IGlkIHRvIHByb2plY3QgaWRcbiAgICAgICAgICAgIGlmICh0aGlzLnByb2plY3RzW2ldLmlkID09PSBwcm9qZWN0SWQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aXRsZSBoYXNudCBjaGFuZ2VkIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnByb2plY3RzW2ldLnRpdGxlID09PSBuZXdUaXRsZSkgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICAgICAgLy8gRWxzZSByZXR1cm4gcHJvamVjdCB0aXRsZSB3aXRoIG5ldyB0aXRsZVxuICAgICAgICAgICAgICAgIHRoaXMucHJvamVjdHNbaV0udGl0bGUgPSBuZXdUaXRsZVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfSxcbn1cblxuY29uc3QgcHJvamVjdEZhY3RvcnkgPSAodGl0bGUpID0+ICh7XG4gICAgdGl0bGUsXG4gICAgdGFza3M6IFtdLFxuICAgIGlkOiB1dWlkdjQoKSxcbiAgICBhZGRUYXNrKHRhc2spIHtcbiAgICAgICAgdGhpcy50YXNrcy5wdXNoKHRhc2spXG4gICAgfSxcbiAgICBkZWxldGVUYXNrKHRhc2spIHtcbiAgICAgICAgY29uc3QgdGFza0luZGV4ID0gdGhpcy50YXNrcy5pbmRleE9mKHRhc2spXG4gICAgICAgIGlmICh0YXNrSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLnRhc2tzLnNwbGljZSh0YXNrSW5kZXgsIDEpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgIH0sXG4gICAgdXBkYXRlVGFzayh0YXNrSWQsIGRhdGEpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLnRhc2tzLmZpbmQoZWwgPT4gZWwuaWQgPT09IHRhc2tJZCksIGRhdGEpXG4gICAgfVxufSlcblxuZXhwb3J0IHsgcHJvamVjdEZhY3RvcnksIFBNIH0iLCJpbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xuXG5jb25zdCB0YXNrRmFjdG9yeSA9ICh0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHkpID0+ICh7IHRpdGxlLCBkdWVEYXRlLCBwcmlvcml0eSwgaWQ6IHV1aWR2NCgpLCB9KVxuXG5jb25zdCBjcmVhdGVUYXNrID0gKHRpdGxlLCBkdWVEYXRlLCBwcmlvcml0eSkgPT4ge1xuICAgIGNvbnN0IHRhc2sgPSB0YXNrRmFjdG9yeSh0aXRsZSwgZHVlRGF0ZSwgcHJpb3JpdHkpXG4gICAgcmV0dXJuIHRhc2tcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlVGFzayIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJvcHRpb25zIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJzZXRBdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiZG9tQVBJIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInJhbmRvbVVVSUQiLCJjcnlwdG8iLCJiaW5kIiwiZ2V0UmFuZG9tVmFsdWVzIiwicm5kczgiLCJVaW50OEFycmF5Iiwicm5nIiwiYnl0ZVRvSGV4Iiwic2xpY2UiLCJ1bnNhZmVTdHJpbmdpZnkiLCJhcnIiLCJvZmZzZXQiLCJ0b0xvd2VyQ2FzZSIsInV1aWQiLCJUeXBlRXJyb3IiLCJidWYiLCJybmRzIiwicmFuZG9tIiwicHJvamVjdExpc3QiLCJwcm9qZWN0VmFsdWUiLCJtYWluIiwidGFza0xpc3QiLCJjbGFzc0xpc3QiLCJ1cGRhdGVVSSIsInByZXZlbnREZWZhdWx0IiwibmV3UHJvamVjdCIsInByb2plY3RJbnB1dCIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJhbGVydCIsInByb2plY3RGYWN0b3J5IiwiY3JlYXRlUHJvamVjdCIsIlBNIiwicHJvamVjdCIsInRpdGxlIiwidGV4dENvbnRlbnQiLCJwcm9qZWN0Q29udGFpbmVyIiwicHJvamVjdERpdiIsImFkZFRhc2tCdG4iLCJkZWxldGVQcm9qZWN0QnRuIiwiY2xhc3NOYW1lIiwiYXBwZW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwibmV3VGFzayIsInRhc2tUaXRsZSIsInRhc2tEdWVkYXRlIiwidGFza1ByaW9yaXR5IiwiY3JlYXRlVGFzayIsImNvbnNvbGUiLCJsb2ciLCJhZGRUYXNrIiwidGFza0RpdiIsInByb2plY3RUYXNrIiwidGFza0RhdGUiLCJkZWxldGVUYXNrQnRuIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwidGFza0NvbnRhaW5lciIsIm5ld0Zvcm0iLCJuZXdJbnB1dCIsIm5ld1Rhc2tMYWJlbCIsImVkaXRUYXNrQnRuIiwiZWRpdFByaW9yaXR5QnRuIiwiZWRpdER1ZURhdGUiLCJuZXdQcmlvcml0eSIsIm5ld0R1ZURhdGUiLCJ0eXBlIiwibmFtZSIsInVwZGF0ZVRhc2siLCJuZXdQcmlvcml0eUxvdyIsIm5ld1ByaW9yaXR5TWVkaXVtIiwibmV3UHJpb3JpdHlIaWdoIiwidGV4dCIsImRlbGV0ZVRhc2siLCJwcm9qZWN0VGFza3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5jbHVkZXMiLCJwcm9qZWN0cyIsImFkZFByb2plY3QiLCJkZWxldGVQcm9qZWN0IiwicHJvamVjdEluZGV4IiwiaW5kZXhPZiIsInVwZGF0ZVByb2plY3QiLCJwcm9qZWN0SWQiLCJuZXdUaXRsZSIsInRhc2tzIiwidGFzayIsInRhc2tJbmRleCIsInRhc2tJZCIsIk9iamVjdCIsImFzc2lnbiIsImZpbmQiLCJlbCIsInRhc2tGYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJuYyJdLCJzb3VyY2VSb290IjoiIn0=